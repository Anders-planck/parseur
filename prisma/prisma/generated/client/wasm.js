
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.ApiKeyScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  key: 'key',
  name: 'name',
  isActive: 'isActive',
  lastUsed: 'lastUsed',
  createdAt: 'createdAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  originalFilename: 'originalFilename',
  mimeType: 'mimeType',
  fileSize: 'fileSize',
  s3Key: 's3Key',
  s3Bucket: 's3Bucket',
  documentType: 'documentType',
  status: 'status',
  confidence: 'confidence',
  parsedData: 'parsedData',
  needsReview: 'needsReview',
  reviewedAt: 'reviewedAt',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProcessingJobScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  inngestJobId: 'inngestJobId',
  currentStage: 'currentStage',
  stageStatus: 'stageStatus',
  retryCount: 'retryCount',
  errorMessage: 'errorMessage',
  startedAt: 'startedAt',
  completedAt: 'completedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  stage: 'stage',
  llmProvider: 'llmProvider',
  llmModel: 'llmModel',
  promptTemplate: 'promptTemplate',
  promptUsed: 'promptUsed',
  rawResponse: 'rawResponse',
  extractedData: 'extractedData',
  confidence: 'confidence',
  processingTime: 'processingTime',
  tokensUsed: 'tokensUsed',
  cost: 'cost',
  attemptId: 'attemptId',
  inngestEventId: 'inngestEventId',
  agreementLevel: 'agreementLevel',
  providerWeights: 'providerWeights',
  sensitive: 'sensitive',
  createdAt: 'createdAt'
};

exports.Prisma.PromptTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  version: 'version',
  template: 'template',
  variables: 'variables',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.DocumentType = exports.$Enums.DocumentType = {
  INVOICE: 'INVOICE',
  RECEIPT: 'RECEIPT',
  PAYSLIP: 'PAYSLIP',
  BANK_STATEMENT: 'BANK_STATEMENT',
  TAX_FORM: 'TAX_FORM',
  CONTRACT: 'CONTRACT',
  OTHER: 'OTHER'
};

exports.DocumentStatus = exports.$Enums.DocumentStatus = {
  UPLOADING: 'UPLOADING',
  PROCESSING: 'PROCESSING',
  NEEDS_REVIEW: 'NEEDS_REVIEW',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  ARCHIVED: 'ARCHIVED'
};

exports.PipelineStage = exports.$Enums.PipelineStage = {
  UPLOAD: 'UPLOAD',
  CLASSIFICATION: 'CLASSIFICATION',
  EXTRACTION: 'EXTRACTION',
  VALIDATION: 'VALIDATION',
  CORRECTION: 'CORRECTION',
  REVALIDATION: 'REVALIDATION',
  FINALIZE: 'FINALIZE'
};

exports.StageStatus = exports.$Enums.StageStatus = {
  PENDING: 'PENDING',
  RUNNING: 'RUNNING',
  SUCCESS: 'SUCCESS',
  FAILED: 'FAILED',
  RETRYING: 'RETRYING'
};

exports.PromptCategory = exports.$Enums.PromptCategory = {
  CLASSIFICATION: 'CLASSIFICATION',
  EXTRACTION: 'EXTRACTION',
  VALIDATION: 'VALIDATION',
  CORRECTION: 'CORRECTION'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  ApiKey: 'ApiKey',
  Document: 'Document',
  ProcessingJob: 'ProcessingJob',
  AuditLog: 'AuditLog',
  PromptTemplate: 'PromptTemplate'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/anders/Desktop/works/saas/parseur/prisma/prisma/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "linux-arm64-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/anders/Desktop/works/saas/parseur/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file\n// Learn more: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"./prisma/generated/client\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\", \"linux-arm64-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n  // directUrl = env(\"DATABASE_URL_UNPOOLED\")\n}\n\n// ============================================\n// User Management\n// ============================================\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  name      String?\n  password  String // bcrypt hashed\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  documents Document[]\n  sessions  Session[]\n  apiKeys   ApiKey[]\n\n  @@index([email])\n  @@map(\"users\")\n}\n\nmodel Session {\n  id        String   @id @default(cuid())\n  userId    String\n  token     String   @unique\n  expiresAt DateTime\n  createdAt DateTime @default(now())\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([token])\n  @@map(\"sessions\")\n}\n\nmodel ApiKey {\n  id        String    @id @default(cuid())\n  userId    String\n  key       String    @unique\n  name      String\n  isActive  Boolean   @default(true)\n  lastUsed  DateTime?\n  createdAt DateTime  @default(now())\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([key])\n  @@map(\"api_keys\")\n}\n\n// ============================================\n// Document Management\n// ============================================\n\nenum DocumentType {\n  INVOICE\n  RECEIPT\n  PAYSLIP\n  BANK_STATEMENT\n  TAX_FORM\n  CONTRACT\n  OTHER\n}\n\nenum DocumentStatus {\n  UPLOADING\n  PROCESSING\n  NEEDS_REVIEW\n  COMPLETED\n  FAILED\n  ARCHIVED\n}\n\nmodel Document {\n  id               String         @id @default(cuid())\n  userId           String\n  originalFilename String\n  mimeType         String\n  fileSize         Int\n  s3Key            String         @unique\n  s3Bucket         String\n  documentType     DocumentType?\n  status           DocumentStatus @default(PROCESSING)\n  confidence       Float?\n  parsedData       Json?\n  needsReview      Boolean        @default(false)\n  reviewedAt       DateTime?\n  completedAt      DateTime?\n  createdAt        DateTime       @default(now())\n  updatedAt        DateTime       @updatedAt\n\n  // Relations\n  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  processingJobs ProcessingJob[]\n  auditLogs      AuditLog[]\n\n  @@index([userId])\n  @@index([userId, status])\n  @@index([status, createdAt])\n  @@index([createdAt])\n  @@index([s3Key])\n  @@map(\"documents\")\n}\n\n// ============================================\n// Pipeline Management\n// ============================================\n\nenum PipelineStage {\n  UPLOAD\n  CLASSIFICATION\n  EXTRACTION\n  VALIDATION\n  CORRECTION\n  REVALIDATION // Re-validation after correction\n  FINALIZE\n}\n\nenum StageStatus {\n  PENDING\n  RUNNING\n  SUCCESS\n  FAILED\n  RETRYING\n}\n\nmodel ProcessingJob {\n  id           String        @id @default(cuid())\n  documentId   String\n  inngestJobId String        @unique\n  currentStage PipelineStage\n  stageStatus  StageStatus   @default(PENDING)\n  retryCount   Int           @default(0)\n  errorMessage String?\n  startedAt    DateTime      @default(now())\n  completedAt  DateTime?\n\n  // Relations\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n\n  @@index([documentId])\n  @@index([inngestJobId])\n  @@map(\"processing_jobs\")\n}\n\nmodel AuditLog {\n  id             String        @id @default(cuid())\n  documentId     String\n  stage          PipelineStage\n  llmProvider    String // \"openai\" | \"anthropic\" | \"consensus\"\n  llmModel       String // \"gpt-4o\" | \"claude-3-5-sonnet\" | \"weighted-consensus\"\n  promptTemplate String\n  promptUsed     String        @db.Text\n  rawResponse    String        @db.Text\n  extractedData  Json?\n  confidence     Float?\n  processingTime Int? // milliseconds\n  tokensUsed     Int?\n  cost           Float?\n\n  // Enhanced tracking for production observability\n  attemptId       String? // Inngest retry attempt ID for idempotency\n  inngestEventId  String? // Inngest event ID for tracing\n  agreementLevel  Float? // Multi-provider consensus agreement level (0-1)\n  providerWeights Json? // Provider weights used in weighted voting { \"openai\": 0.5, \"anthropic\": 0.5 }\n  sensitive       Boolean @default(false) // Flag for PII/sensitive content requiring redaction\n\n  createdAt DateTime @default(now())\n\n  // Relations\n  document Document @relation(fields: [documentId], references: [id], onDelete: Cascade)\n\n  @@unique([documentId, stage, attemptId]) // Prevent duplicate audit logs on retries\n  @@index([documentId])\n  @@index([stage])\n  @@index([createdAt])\n  @@index([inngestEventId])\n  @@map(\"audit_logs\")\n}\n\n// ============================================\n// Prompt Management\n// ============================================\n\nenum PromptCategory {\n  CLASSIFICATION\n  EXTRACTION\n  VALIDATION\n  CORRECTION\n}\n\nmodel PromptTemplate {\n  id          String         @id @default(cuid())\n  name        String         @unique\n  category    PromptCategory\n  version     String\n  template    String         @db.Text\n  variables   Json // { \"image\": \"base64\", \"schema\": \"json\" }\n  description String?\n  isActive    Boolean        @default(true)\n  createdAt   DateTime       @default(now())\n  updatedAt   DateTime       @updatedAt\n\n  @@index([category])\n  @@index([name])\n  @@map(\"prompt_templates\")\n}\n",
  "inlineSchemaHash": "23c5c60033e7241c1947937773c1004cd1c1dad16242db7c345c08b2c8cc2512",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"ApiKey\",\"relationName\":\"ApiKeyToUser\"}],\"dbName\":\"users\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"ApiKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastUsed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApiKeyToUser\"}],\"dbName\":\"api_keys\"},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalFilename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"s3Key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"s3Bucket\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentType\",\"kind\":\"enum\",\"type\":\"DocumentType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DocumentStatus\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"parsedData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"needsReview\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DocumentToUser\"},{\"name\":\"processingJobs\",\"kind\":\"object\",\"type\":\"ProcessingJob\",\"relationName\":\"DocumentToProcessingJob\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToDocument\"}],\"dbName\":\"documents\"},\"ProcessingJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inngestJobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentStage\",\"kind\":\"enum\",\"type\":\"PipelineStage\"},{\"name\":\"stageStatus\",\"kind\":\"enum\",\"type\":\"StageStatus\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToProcessingJob\"}],\"dbName\":\"processing_jobs\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stage\",\"kind\":\"enum\",\"type\":\"PipelineStage\"},{\"name\":\"llmProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"llmModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promptTemplate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promptUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rawResponse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"extractedData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"processingTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokensUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"attemptId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inngestEventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agreementLevel\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"providerWeights\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sensitive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"AuditLogToDocument\"}],\"dbName\":\"audit_logs\"},\"PromptTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"PromptCategory\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"template\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variables\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"prompt_templates\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

